package co.com.accenture.service.api;

import com.fasterxml.jackson.databind.ObjectMapper;

import co.com.accenture.service.model.JsonApiBodyRequest;
import co.com.accenture.service.model.JsonApiBodyResponseErrors;
import co.com.accenture.service.model.JsonApiBodyResponseSuccess;
import io.swagger.annotations.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.constraints.*;
import javax.validation.Valid;
import javax.servlet.http.HttpServletRequest;
import java.io.IOException;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-07-25T19:33:53.975Z")

@Controller
public class RegistrarApiController implements RegistrarApi {

    private static final Logger log = LoggerFactory.getLogger(RegistrarApiController.class);

    private final ObjectMapper objectMapper;

    private final HttpServletRequest request;

    @org.springframework.beans.factory.annotation.Autowired
    public RegistrarApiController(ObjectMapper objectMapper, HttpServletRequest request) {
        this.objectMapper = objectMapper;
        this.request = request;
    }

    public ResponseEntity<?> registrarPost(@ApiParam(value = "body" ,required=true ) 
    @Valid @RequestBody JsonApiBodyRequest body) {
    	
    	System.out.println(body);
    	JsonApiBodyResponseErrors responseErrors = new JsonApiBodyResponseErrors();
    	JsonApiBodyResponseSuccess responseSuccess = new JsonApiBodyResponseSuccess();
    	JsonApiBodyRequest persona = new JsonApiBodyRequest();
    	System.out.println(persona);
    	
    	if(persona.getPersona().get(0).getRol().equals("SUPERUSUSARIO")) {
    		System.out.println("error superusuario");
    		responseErrors.setCode("2525");
    		responseErrors.setDetalle("no se pueden registrar mas superUsuarios");
    		return new ResponseEntity<JsonApiBodyResponseErrors>(responseErrors, HttpStatus.FAILED_DEPENDENCY);
    	}else {
    		System.out.println("dato adecuado");
    		responseSuccess.setEstado(body.getPersona().get(0).getEstado());
    		responseSuccess.setId(body.getPersona().get(0).getId());
    		responseSuccess.setNombre(body.getPersona().get(0).getNombre());
    		return new ResponseEntity<JsonApiBodyResponseSuccess>(responseSuccess, HttpStatus.OK);
    	}
    	
    	/*System.out.println(body);
        String accept = request.getHeader("Accept");
        if (accept != null && accept.contains("application/json")) {
            try {
                return new ResponseEntity<JsonApiBodyResponseSuccess>(objectMapper.readValue("{  \"estado\" : \"estado\",  \"id\" : \"id\",  \"nombre\" : \"nombre\"}", JsonApiBodyResponseSuccess.class), HttpStatus.NOT_IMPLEMENTED);
            } catch (IOException e) {
                log.error("Couldn't serialize response for content type application/json", e);
                return new ResponseEntity<JsonApiBodyResponseSuccess>(HttpStatus.INTERNAL_SERVER_ERROR);
            }
        }

        return new ResponseEntity<JsonApiBodyResponseSuccess>(HttpStatus.NOT_IMPLEMENTED);*/
    }

}
