/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.JsonApiBodyRequest;
import io.swagger.model.JsonApiBodyResponseErrors;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-08-17T21:36:33.675Z")

@Api(value = "listar", description = "the listar API")
public interface ListarApi {

    @ApiOperation(value = "Listado de ofertas", nickname = "listarGet", notes = "Listado de ofertas de la tabla Ofertas de la base de datos.", response = JsonApiBodyRequest.class, tags={ "ofertas", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = JsonApiBodyRequest.class),
        @ApiResponse(code = 404, message = "OFERTAS NO ENCONTRADOS", response = JsonApiBodyResponseErrors.class) })
    @RequestMapping(value = "/listar",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<?> listarGet();


    @ApiOperation(value = "Busqueda de ofertas por id de negocio", nickname = "listarIdnegocioIdnegocioGet", notes = "Busqueda de ofertas por id de negocio en la tabla negocio de la base de datos.", response = JsonApiBodyRequest.class, tags={ "ofertas", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = JsonApiBodyRequest.class),
        @ApiResponse(code = 404, message = "NEGOCIO NO ENCONTRADO", response = JsonApiBodyResponseErrors.class) })
    @RequestMapping(value = "/listar/idnegocio/{idnegocio}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<?> listarIdnegocioIdnegocioGet(@ApiParam(value = "ID del negocio",required=true) @PathVariable("idnegocio") String idnegocio);


    @ApiOperation(value = "Busqueda de ofertas por id de negocio", nickname = "listarIdofertaGet", notes = "Busqueda de ofertas por id de negocio en la tabla negocio de la base de datos.", response = JsonApiBodyRequest.class, tags={ "ofertas", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = JsonApiBodyRequest.class),
        @ApiResponse(code = 404, message = "OFERTA NO ENCONTRADA", response = JsonApiBodyResponseErrors.class) })
    @RequestMapping(value = "/listar/{idoferta}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<?> listarIdofertaGet(@ApiParam(value = "ID de la ofertas",required=true) @PathVariable("idoferta") String idoferta);


    @ApiOperation(value = "Busqueda de ofertas por tipo de producto", nickname = "listarProductoProductoGet", notes = "Busqueda de ofertas por tipo de producto en la tabla ofertas de la base de datos.", response = JsonApiBodyRequest.class, tags={ "ofertas", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = JsonApiBodyRequest.class),
        @ApiResponse(code = 404, message = "NO ENCONTRADO", response = JsonApiBodyResponseErrors.class) })
    @RequestMapping(value = "/listar/producto/{producto}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<?> listarProductoProductoGet(@ApiParam(value = "ID de la persona",required=true) @PathVariable("producto") String producto);

    @ApiOperation(value = "Busqueda de ofertas por tipo de oferta", nickname = "listarOfertaTipoGet", notes = "Busqueda de ofertas por tipo de oferta en la tabla ofertas de la base de datos.", response = JsonApiBodyRequest.class, tags={ "ofertas", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = JsonApiBodyRequest.class),
        @ApiResponse(code = 404, message = "NO ENCONTRADO", response = JsonApiBodyResponseErrors.class) })
    @RequestMapping(value = "/listar/tipo/{producto}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<?> listarOfertaTipoGet(@ApiParam(value = "ID de la persona",required=true) @PathVariable("tipo") String tipo);


}
